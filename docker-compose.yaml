services:
  app:
    container_name: auth
    build:
      context: .
      dockerfile: prod.Dockerfile
    ports:
      - "50051:50051"
      - "2112:2112"
    env_file: .env
    environment:
      - APP_ENV=prod
    volumes:
      - ./logs:/app/logs
    labels:
      co.elastic.logs/enabled: "true"
    depends_on:
      pg:
        condition: service_healthy

  pg:
    container_name: pg
    image: postgres:15-alpine3.22
    env_file:
      - .env
    environment:
      - "POSTGRES_DB=${PG_DATABASE_NAME}"
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $PG_USER" ]
      interval: 5s
      retries: 5

  migrator:
    container_name: migrator
    build:
      context: .
      dockerfile: migration.Dockerfile
    restart: on-failure
    environment:
      DB_HOST: pg

  prometheus:
    image: prom/prometheus:v3.7.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:12.3.0-18765596677
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana

  promtail:
    image: grafana/promtail:3.5
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

  loki:
    image: grafana/loki:3.5
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml

volumes:
  postgres_volume:
  prometheus_data:
  grafana_data: