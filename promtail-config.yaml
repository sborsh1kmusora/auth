server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker

    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s

    relabel_configs:
      # Имя контейнера (без / в начале)
      - source_labels: [__meta_docker_container_name]
        regex: "/(.*)"
        target_label: container
      # Имя сервиса из docker-compose
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: compose_service
      # Имя проекта docker-compose
      - source_labels: [__meta_docker_container_label_com_docker_compose_project]
        target_label: compose_project
      # Имя образа
      - source_labels: [__meta_docker_container_image]
        target_label: image
      # Поток (stdout/stderr)
      - source_labels: [__meta_docker_container_log_stream]
        target_label: stream

    pipeline_stages:
      # Парсим JSON-формат логов Go-приложения
      - json:
          expressions:
            level: level
            ts: timestamp
            msg: msg
            address: address

      # Добавляем временную метку из поля "timestamp"
      - timestamp:
          source: ts
          format: RFC3339Nano

      # Делаем уровень лога отдельной меткой
      - labels:
          level: